/* eslint-disable @next/next/no-html-link-for-pages */
/* eslint-disable react/jsx-key */
import { useEffect, useState } from 'react';
import PropTypes from 'prop-types';
import { styled } from '@mui/material/styles';
import LinearProgress from '@mui/material/LinearProgress';
import Box from '@mui/material/Box';
import Card from '@mui/material/Card';
import CardContent from '@mui/material/CardContent';
import CardMedia from '@mui/material/CardMedia';
import IconButton from '@mui/material/IconButton';
import Typography from '@mui/material/Typography';
import Tooltip, { tooltipClasses } from '@mui/material/Tooltip';
import Head from 'next/head';
import Image from 'next/image';
import Link from 'next/link';

import styles from '../styles/Home.module.css';

const LightTooltip = styled(({ className, ...props }) => (
  <Tooltip {...props} classes={{ popper: className }} />
))(({ theme }) => ({
  [`& .${tooltipClasses.tooltip}`]: {
    backgroundColor: theme.palette.common.white,
    color: 'rgba(0, 0, 0, 0.87)',
    boxShadow: theme.shadows[1],
    fontSize: 15,
  },
}));

function LinearProgressWithLabel(props) {
  return (
    <Box sx={{ display: 'flex', alignItems: 'center' }}>
      <Box sx={{ width: '100%', mr: 1 }}>
        <LinearProgress variant='determinate' {...props} />
      </Box>
      <Box sx={{ minWidth: 35 }}>
        <Typography variant='body2' color='text.secondary'>{`${Math.round(
          props.value
        )}%`}</Typography>
      </Box>
    </Box>
  );
}

LinearProgressWithLabel.propTypes = {
  /**
   * The value of the progress indicator for the determinate and buffer variants.
   * Value between 0 and 100.
   */
  value: PropTypes.number.isRequired,
};

export default function Home() {
  const [data, setData] = useState([]);
  const [todo, setTodo] = useState('');

  const [exp, setExp] = useState(0);
  const [progress, setProgress] = useState(0);

  const handleSetTodo = (event) => {
    setTodo(event.target.value);
  };

  const addTodo = (event) => {
    event.preventDefault();
    fetch('/api/add?todo=' + todo)
      .then((res) => res.json())
      .then((data) => {
        loadTodos();
      });
    event.target.reset();
  };

  const removeTodo = (rtodo) => {
    fetch('/api/remove?todo=' + rtodo)
      .then((res) => res.json())
      .then((data) => {
        loadTodos();
      });
    setExp(exp + 5);
    setProgress(progress + 5);
  };

  const loadTodos = () => {
    fetch('/api/list')
      .then((res) => res.json())
      .then((data) => {
        setData(data);
      });
  };

  useEffect(() => {
    loadTodos();
  }, []);

  // useEffect(() => {
  //   const timer = setInterval(() => {
  //     setProgress((prevProgress) =>
  //       prevProgress >= 100 ? 10 : prevProgress + 10
  //     );
  //   }, 800);
  //   return () => {
  //     clearInterval(timer);
  //   };
  // }, []);

  console.log('EXP', exp);

  function Character() {
    if (exp <= 20) {
      return (
        <div className='container'>
          {/* <button onClick={handleSetExp}>{exp}</button> */}
          <svg
            id='centered'
            xmlns='http://www.w3.org/2000/svg'
            viewBox='-250 -17 900 200'
          >
            <path
              id='charmander'
              d='M22.6 105.3c5.2-7.8 8.8-16.6 16-23 1.9-1.7.2-2.4-.9-3.4-5.6-5.2-9.8-11.3-12.3-18.6-1.5-4.4-.7-8.4 2.5-11.6 3.8-3.7 4.9-8.6 6.3-13.2 1.1-3.5 2.7-6.1 5.5-8.1 13.8-9.8 35.6-8.7 40.8 15.5 1.6 7.3 1.7 14.7-1.3 21.4-3.6 7.9-2.8 15.5-1.3 23.5 2.3 12.2 5.5 24 12.4 34.6 2.3 3.5 3.6 7.5 4.1 11.7.4 3.1 1.9 5.2 4.3 6.9 15.2 11.4 36.9 6.9 46.6-12.8 1.1-2.2.1-3.1-1.9-3.9-6.5-2.5-7.2-4.1-5.1-10.9.2-.7.5-1.6.3-2.3-2.1-6.9.8-13.7.8-20.6 0-1.1.7-2.7 2.1-2.6 2 .2.7 2.6 2.3 3.9-.8-7.3 8.7-9.1 7.7-16.6 2.8 2.8 3.4 6.1 2.8 9.5-.5 2.8-.1 4.9 1.1 7.7 1.5 3.4 5.7 5.9 4.5 10.5 0 .1-.4 3.7 2.4 1.4 1.1-.9 1.3.9 1.3 1.7.8 7.8-1.1 14.6-7.5 19.6-2.5 2-3.9 4.2-4.5 7.2-5.7 27.9-34.3 37.1-54.4 30-2.1-.7-4.1-1.8-7.2-3.2 2.2 5.1 3.8 9.5 4.3 14.3.1.9.5 1.8.7 2.7.2 1.6.9 3.6-.4 4.6-1.6 1.2-2.9-.6-4.1-1.6-2-1.7-2.8-1.2-3.5 1.2-1.1 3.9-2.3 4.2-4.8.8-2.2-2.9-3.8-2.4-5.6.2-.7 1-1.5 2.1-2.9 1.8-1.5-.3-1.4-1.8-1.6-3-.7-4.4-1.9-8.7-1.4-13.2.7-5.2-2-9.1-5.2-12.6-1.6-1.8-4.2-2.5-6.6-1.2-2.3 1.2-1.9 3.1-1.1 5.2 1 2.7.4 5.2-2.5 6.3-8 3-15.9 6.9-24.8 4.4-2.8-.8-5.4-2.1-8-3.2v-1.6c2-1.5 4-3.2 6.2-4.5 2.4-1.5 3.7-2.7 1.4-5.5-2.2-2.6-2.3-5.9-1.2-9.2 1-3.1 2.7-5.8 4.7-8.3.9-1.2 2-2.3 1.5-3.9-2.1-6.3-2.5-12.9-2.3-19.5 0-.7.2-2-.9-1.8-4 .8-5.8-3.7-9.4-3.7.1-.8.1-1.9.1-3z'
            />
          </svg>
        </div>
      );
    } else if (exp <= 50) {
      return (
        <div className='container'>
          {/* <button onClick={handleSetExp}>{exp}</button> */}
          <svg
            id='centered'
            xmlns='http://www.w3.org/2000/svg'
            viewBox='-500 -10 1700 300'
          >
            <path
              id='charmeleon'
              d='M209 289h-4c-4-8.4-5.8-8.8-13.5-3.9-2.4 1.5-5 2.6-7.5 3.9h-5c-1.1-10.1-1.1-10.1-11.1-8.6-.2 0-.3.1-.5.1-2.2.2-5 1.6-6.4-.9-1.3-2.3.4-4.6 1.7-6.4 3.5-4.7 7.2-9.2 10.8-13.7 1.9-2.3 3.5-4.4.5-7.2-2.9-2.8-4 .3-5.7 1.4-.9.6-1.8 1.7-3.1.9-.9-.6-1-1.7-.9-2.7.1-2.5.3-5 .4-7.5 0-1.1.4-2.6-1.1-2.9-1.1-.3-1.7.9-2.3 1.6-2.6 3-5.2 6.1-7.9 9-1.1 1.2-2.5 2.6-4.3 1.6-1.7-1-1.3-2.9-1-4.5.3-2 .8-3.9 1.1-5.9.6-4-1.3-5.7-5.1-4.6-3.5 1-6.9 2.2-10.3 3.7-7.2 3.2-7.9 5.3-4.6 12.2.6 1.3 1.3 2.7 1.7 4.1 2 5.9 1 8-4.9 9.6-13.2 3.6-26.7 5.4-40.2 7.4-1.3.2-3.1.5-3.8-.6-2.1-3-4.8-2.7-7.6-2-5.1 1.3-6.4-2.7-7.7-5.7-1.4-3.2 2.1-4 3.9-5.3 1.9-1.4 4.1-2.3 5.9-3.7 4-2.9 5.8-6.1 3.1-11.4-5.4-10.8-3-20.7 4.9-29.4 3.8-4.2 7.4-8.6 9.5-13.9 1.1-2.6 2-5.3 1.1-8.2-4.7-13.6-8.1-27.5-9.7-41.8-.2-2-1-3.3-3.2-2.6-10.5 3.3-21 6.3-26.2 17.8-4.6 10.2-9.3 20.3-13.7 30.5-3 6.9-5.5 13.9-7.6 21.1-.4 1.5-1.1 3.4-3.1 3.4-1.7 0-2.4-1.7-3-3-.8-1.6-1.5-3.4-2.1-5.1-.5-1.1-1.1-2.2-2.4-2.2-1.6-.1-2.4 1-2.9 2.3-1.1 3.1-2.1 6.3-3.3 9.4-.5 1.4-.9 3-2.5 3.6-4.5 1.5-8-.3-10.4-5-2.9-6.3-3.2-13.1-4-19.9v-5c1.4-5.4 4.3-10.1 8-14.2 5.4-5.9 10.9-11.7 15.9-17.9 8.9-10.9 19.3-19.5 33.2-23.6 6.8-2 12.5-6.2 15.7-13 1-2.1 2.7-3.9 4.7-5 2.8-1.6 2.5-3.4 1-5.7-3.4-5.2-7.4-9.9-11.7-14.2-5.2-5.2-10.4-10.3-15.4-15.6-6.7-7-8-15.4-6-24.6 2-9.1 5.9-17.3 11-25 2-2.9 2.1-5.2.2-8.1-3.2-5.1-6-10.3-9-15.6C43.9 8.1 44.7 5.3 53 1h8c5.5 5.8 12.5 9.4 19.1 13.6 9.5 6 20.2 9.5 30 14.8 4.6 2.5 9 5.2 11.3 10.2 1.2 2.7 3.1 4.5 5.6 6.1 4.3 2.6 6 6.4 4.6 11.5-1 3.7-1.4 7.6-2.5 11.2-1 3.2-.4 5.6 1.9 8.1 6.3 7.2 6.2 14.6.2 22.1-2.7 3.3-5.9 5.8-9.8 7.6-1.2.6-2.4 1-2.4 2.7 0 4.3 6.1 10.7 10.7 10.7 4.5.1 9.2 1 11.7 4.5 4.1 5.8 10 8.4 15.8 11.6 13.5 7.3 26.1 16 37.7 26.1 5.2 4.5 11 5.9 17.6 4.8 5.3-.9 10.4-2.2 15.3-4.5 19.7-9.3 27.7-32.3 25.3-54.8-.5-4.5-2.8-6.3-7-6.9-11.6-1.5-15.9-5.9-17.4-17.4-.7-5.5-1.5-10.8-4.4-15.7-1.2-2-4.7-4.2-2.8-6.1 2.1-2 5.2.6 7.6 2.1.2.1.6 0 .9 0-.2-2.2-2.1-2.8-3.6-3.8-3.3-2.3-5.5-5.2-5.9-9.4-.1-1.6-1.1-3.5.6-4.6 1.5-1 2 2.2 4.1 1.4-.8-5-4.2-8.8-6.6-13.1-.8-1.4-3.7-2.7-2-4.4 1.6-1.6 4.1-.6 5.7 1.2.4.4 1 .7 2.3 1.7-2.1-9.8-11.9-13.5-14-22.2 8.2 3.9 15.5 8.7 19.8 17.3 1.4-2.6-2.3-4.9.3-6 2.2-1 4.3 1.1 5.9 2.9 2.3 2.5 3.5 5.6 4.9 8.7.9 2.1 1.8 4.4 4 6.3.4-3.6-2.6-5.5-2.5-9.2 7.2 2.5 10.6 8.1 13.7 13.9 3.2-3.9 3.8-4.1 4.4-1.4 1.5 7.4 6.3 12.2 11.7 16.8 11 9.5 9.2 26.3-3.3 33.8-1.3.8-2.5 1.6-3.8 2.4-3.1 2-3.9 4.5-2.3 8.1 3.3 7.3 6 14.8 8.1 22.6 4.5 16.6 6.7 33.3 2.2 50.3-5.9 21.7-20.9 35.9-39.7 46.7-9.4 5.4-12.4 14.2-13.8 23.9-.9 6.4 2.1 12 4.6 17.6 2.7 6 2.2 10.6-2.4 12.8-5.6 2.6-9 7.4-13.4 11.4z'
            />
          </svg>
        </div>
      );
    } else {
      return (
        <div className='container'>
          {/* <button onClick={handleSetExp}>{exp}</button> */}
          <svg
            id='centered'
            xmlns='http://www.w3.org/2000/svg'
            viewBox='-300 -17 1200 400'
          >
            <path
              id='charizard'
              d='M363 166v36c-1.4 2.5-3.2 4.5-6.3 3.6-3-.8-3.1-3.6-3.5-6.1-.4-2.8-.2-5.6-2.6-7.8-11.3-10.6-22.3-21.5-34.9-30.6-3.8-2.8-8.1-4.2-12-4.1-2.6 5.7.5 13-7.5 16.1-2.3.9-2.2 3.1.3 4.6 1.8 1 3.5 1.6 5.6.3 4.7-2.7 10.3-2.2 15.3-4.3.9-.4 2.5-.8 3 .7.5 1.3-1 1.9-1.9 2.6-3.9 3.1-7.8 6.3-11.8 9.3-5 3.7-7.3 9.4-10.9 14.1-3.2 4.3-.4 8.6 1.8 12.8 9.2 17.3 14.7 35.8 11.1 55.3-5.1 27.6-22.5 46.1-47.5 57.9-7 3.3-7.1 3-3.8 9.8 1.5 3.1 2.4 6.2 1.7 9.7-.9 4.4-3.1 5.2-6.4 2.2-2.3-2.1-5.1-3.1-7.9-4.1-2.7-.9-4.2-.1-4.4 2.8-.2 3.1-1.6 5.7-3.3 8.2h-3c-.6-1-1.1-2.1-1.9-2.9-3.2-3.2-6.9-6.5-11.4-6.3-3.8.1-3.5 5.1-5.6 7.6-.4.5-.7 1.1-1.1 1.7h-2c-2.5-4.7-5.8-8.7-10.4-11.3-4.1-2.3-6.4-5.2-5.9-10 .2-2.2-.6-3.9-3.1-4.4-18.6-3.4-34.4-12.1-48.4-24.6-2.4-2.1-4.8-3.2-8.1-1.1s-2.2 4.7-1.6 7.4c1.6 6.4-.1 9.3-6.4 11.3-3.2 1-6.6 1.7-9.3 3.5-6.8 4.3-13.1 9.2-22 8.4-3.2-.3-6.6 2-9.9 3.2-2.3.8-4.5.5-4-2.4 1.1-5.9-2.8-4.9-6-4.6-1.6.1-3.2.8-4.8 1.2-2.9.8-3.7-.7-3.3-3.2.2-1.3.8-2.6 1.5-3.7 1.7-2.7 1.3-4-2.2-3.5-1.2.2-2.8.9-3.6-.7-.7-1.5 0-3 .9-4.2 3.3-4.5 7.8-7.2 13-8.9 4.7-1.5 8.6-4.4 12.2-7.6 3-2.7 3.5-4.9 0-8.1-8.7-7.9-11.4-17.7-7.3-29 2-5.5 4-11.4 8.3-15.3 10-9.1 14.4-20.6 17.3-33.2 1-4.4 3.3-8.6 5.3-13.5-5.3 1.5-9.5 3.6-13.2 6.2-7.9 5.4-15.6 4.7-23.5.2-2.6-1.5-5.3-3-7.6-4.9-5.8-4.7-12.4-5.2-19.4-4.3-4.1.5-8.3.4-11.1-3-2.4-3-5-7.1-2.3-10.5 4.5-5.7 1.3-11.6 2.6-17.9-6.3 2.6-11 6.3-15.6 10.1-6.6 5.5-14 10.6-12.1 21.2.4 2.4-1.2 5-4.3 5.2-3 .3-4.7-1.7-5.3-4.3-.7-3.6-1.1-7.2-1.6-10.8v-20l4.8-19.9C12.3 121 20 94.6 41.6 74.8c2.3-2.1 4.2-4.7 6.5-6.9 1.8-1.7 3.7-3.6 5.9-4.6 10-4.2 18-11.4 26.5-17.7 4-3 7.7-6.5 12.2-8.6 3.4-1.6 7.2-2.8 10 .8 2.8 3.6.9 7-1.6 9.9-3.3 3.8-6.5 7.6-10.1 11.1-3.8 3.7-5.2 8-4.6 13.1.4 3.6.7 7.3 1.5 10.9 2.3 10.9 6.4 20.9 14.6 29 5.2 5.1 10.2 10.5 10.7 18.6.7 11.5 6.6 20.8 13.8 29.3 1.2 1.4 2.2 3.2 4.4 2.6 2.2-.6 2.2-2.8 2.6-4.5 3.1-13.4 4.8-26.9 3.5-40.6-1-9.7-1.5-19.6-9.1-27.3-4-4.1-4.1-9.7-2.2-15 4.2-11.6.9-21.9-5-31.9-2-3.5-4.7-6.4-7.4-9.4-1.9-2.1-3.9-4.2-5.5-6.5-1.9-2.8-2.2-6-.2-8.9 2.1-2.9 5.2-3.3 8.5-2.7 2.8.5 4.7 2.4 6.6 4.2 6.4 6.1 12.2 12.8 19.1 18.4 4.1 3.3 8.3 2.9 12.6.8 3.9-1.9 4.7-5.4 4.5-9.2-.3-6-.5-12-.9-17.9-.3-4 .6-7.6 3.3-10.6h6c3.6 3 4.5 7.2 5.3 11.5 2.5 13.8 5.7 27.4 13.4 39.5 2.2 3.4 1.9 7.2 1.3 11.1-1.6 10.6 1.4 20.2 7.6 28.6 2.4 3.3 3 6 1.7 9.6-1.8 4.9-5.2 9-7.2 13.6-2.2 5-5.4 7.3-10.6 7.4-4.6.1-6.5 2.4-6.1 7 .9 10.9 4.4 21.1 8.5 31.2 1.3 3.1 2.5 4.4 4.6.6 1.1-1.9 3-2.5 5.1-2.5 2 0 4-.2 5.7-1.4 11.1-7.4 22.2-14.8 31.4-24.7 2.6-2.7 4.4-5.7 5.5-9.4 5.3-18.3 9.6-36.7 12.4-55.5 1-6.8.1-12.9-4.5-18.2-2.4-2.8-4.5-5.8-6.5-8.8-3.2-4.8-3.2-9.6-.1-12.3 2.9-2.6 7.3-2.2 11.7 1.7 4.6 4.1 9 8.4 13.4 12.7 1.6 1.5 3.1 3.3 5.3 3.6 7.1 1.1 13.1 4.9 19.3 8 6.4 3.3 12.9 6.2 20.3 6.6 4.2.2 7.1 2.4 9.2 6 4.8 8 9.7 15.9 14.4 24 7.7 13.3 14.7 26.9 24.8 38.7 2.6 3 4.1 6.4 4.8 10.3 1.4 8.5 3 17.2 4.5 25.9zm-76.4 67.8c-.4-3.3-.6-7-1.3-10.6-.8-3.9-2.1-7.7-3.1-11.5-1-3.6-2.6-5.1-6.4-2.7-3.8 2.3-8.7.4-10.4-3.4-2.7-6.1-2.7-6.2-9.3-3.5-3.2 1.3-5.1.3-6.2-2.7-.5-1.4-.7-3-1.4-4.2-1-1.7-.4-4.8-3.4-4.8-3.3 0-3.7 2.8-4.4 5.2-1.6 5.8-3.1 11.6-5.6 17-2.2 4.8-5.4 8.2-11 9.2-2.2.4-5.5-1.4-6.2 1.1-.8 2.8 2.3 4.8 4.2 6.9.8.9 1.6 1.7 2.4 2.5 10.9 11.9 19 25.2 21.2 41.5.6 4.4 2.9 5.3 7 4.4 18.3-3.9 34-24.1 33.9-44.4zm-209-51.2c4.6 3.7 7.6 8.1 12.9 7.6 5.5-.5 10.6-2.8 15.5-5.3 2.5-1.3 2.7-2.7.5-4.5-4.7-3.8-9.9-5.5-15.8-2.9-3.9 1.8-7.7 3.9-13.1 5.1zm144 6.8c.1-3.4 0-7-3.8-6.6-4.2.4-5.5 4.7-6.1 8.2-.6 3.3 2.6 4.4 5.3 4.6 4.8.2 4.1-3.8 4.6-6.2z'
            />
          </svg>
        </div>
      );
    }
  }

  if (!data)
    return (
      <div className={styles.container}>
        <h1 className={styles.description}>Loading...</h1>
      </div>
    );
  return (
    <>
      <header className={styles.header}>
        <h1 className={styles.subtitle}>🦜</h1>
      </header>
      <main className={styles.main}>
        <Card sx={{ display: 'flex', minWidth: '300px' }}>
          <Box>
            <CardContent sx={{ flex: '1 0 auto' }}>
              {exp <= 20 ? (
                <Typography component='div' variant='body1'>
                  {'Charmander'}
                </Typography>
              ) : exp <= 50 ? (
                <Typography component='div' variant='body1'>
                  {'Charmeleon'}
                </Typography>
              ) : (
                <Typography component='div' variant='body1'>
                  {'Charizard'}
                </Typography>
              )}
              <div className={styles.description}>
                <Character />
              </div>
              <LinearProgressWithLabel
                value={progress}
                color='inherit'
                sx={{ display: 'flex', width: 300 }}
              />
              <Typography
                variant='subtitle1'
                color='text.secondary'
                component='div'
              >
                Example text
              </Typography>
            </CardContent>
          </Box>
        </Card>
        <div className={styles.grid}>
          <form className={styles.cardForm} onSubmit={addTodo}>
            <input
              className={styles.cardInput}
              type='text'
              name='todo'
              onChange={handleSetTodo}
              placeholder='Add a new task...'
            />
          </form>
          <div className={styles.grid}>
            {data.map((item) => (
              <LightTooltip title='+5 EXP' placement='top'>
                <a
                  href='#'
                  onClick={() => removeTodo(item)}
                  className={styles.card}
                >
                  <p>{item}</p>
                </a>
              </LightTooltip>
            ))}
          </div>
        </div>
      </main>
    </>
  );
}
